// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BootstrapStack Construct(BootstrapStack):  Snapshot Test 1`] = `
Object {
  "Outputs": Object {
    "BootstrapVersion": Object {
      "Description": "The version of the bootstrap resources that are currently mastered in this stack",
      "Value": "14",
    },
    "BucketDomainName": Object {
      "Description": "The domain name of the S3 bucket owned by the CDK toolkit stack",
      "Value": "cdk-accel-assets-111111111111-us-east-1.s3.us-east-1.amazonaws.com",
    },
    "BucketName": Object {
      "Description": "The name of the S3 bucket owned by the CDK toolkit stack",
      "Value": "cdk-accel-assets-111111111111-us-east-1",
    },
    "FileAssetKeyArn": Object {
      "Description": "The ARN of the KMS key used to encrypt the asset bucket ",
      "Export": Object {
        "Name": "CdkBootstrap-accel-FileAssetKeyArn",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "AssetEncryptionKey49BA7B12",
          "Arn",
        ],
      },
    },
    "ImageRepositoryName": Object {
      "Description": "The name of the ECR repository which hosts docker image assets ",
      "Value": "cdk-accel-container-assets-111111111111-us-east-1",
    },
  },
  "Parameters": Object {
    "CloudFormationExecutionPolicies": Object {
      "Type": "String",
    },
    "ContainerAssetsRepositoryName": Object {
      "Default": "",
      "Type": "String",
    },
    "FileAssetsBucketKmsKeyId": Object {
      "Default": "",
      "Type": "String",
    },
    "FileAssetsBucketName": Object {
      "Default": "",
      "Type": "String",
    },
    "PublicAccessBlockConfiguration": Object {
      "Type": "String",
    },
    "Qualifier": Object {
      "Type": "String",
    },
    "TrustedAccounts": Object {
      "Type": "String",
    },
    "TrustedAccountsForLookup": Object {
      "Type": "String",
    },
  },
  "Resources": Object {
    "AssetEncryptionKey49BA7B12": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "Description": "Key used to encrypt centralized CDK assets",
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion",
                "kms:GenerateDataKey",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
              "Resource": "*",
              "Sid": "Management Actions",
            },
            Object {
              "Action": Array [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey",
                "kms:Describe*",
              ],
              "Condition": Object {
                "StringEquals": Object {
                  "aws:PrincipalOrgID": "o-asdf123456",
                  "kms:ViaService": "s3.us-east-1.amazonaws.com",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "Allow S3 to use the encryption key",
            },
            Object {
              "Action": Array [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey",
                "kms:Describe*",
              ],
              "Condition": Object {
                "ArnLike": Object {
                  "aws:PrincipalARN": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":iam::*:role/AWSAccelerator-*",
                      ],
                    ],
                  },
                },
                "StringEquals": Object {
                  "aws:PrincipalOrgID": "o-asdf123456",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": "*",
              "Sid": "Allow org to perform encryption",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Condition": Object {
                "StringEquals": Object {
                  "aws:PrincipalOrgID": "o-asdf123456",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudformation.amazonaws.com",
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Retain",
    },
    "AssetEncryptionKeyAliasF99A8AC7": Object {
      "Properties": Object {
        "AliasName": "alias/accelerator/kms/cdk/key",
        "TargetKeyId": Object {
          "Fn::GetAtt": Array [
            "AssetEncryptionKey49BA7B12",
            "Arn",
          ],
        },
      },
      "Type": "AWS::KMS::Alias",
    },
    "CdkBootstrapVersion": Object {
      "Properties": Object {
        "Name": "/cdk-bootstrap/accel/version",
        "Type": "String",
        "Value": "14",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "CloudFormationExecutionRole": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Custom resource provider framework-role created by cdk.",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudformation.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AdministratorAccess",
              ],
            ],
          },
        ],
        "RoleName": "cdk-accel-cfn-exec-role-111111111111-us-east-1",
      },
      "Type": "AWS::IAM::Role",
    },
    "ContainerAssetsRepository": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "ImageTagMutability": "IMMUTABLE",
        "RepositoryName": "cdk-accel-container-assets-111111111111-us-east-1",
        "RepositoryPolicyText": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:BatchGetImage",
                "ecr:GetDownloadUrlForLayer",
              ],
              "Condition": Object {
                "StringLike": Object {
                  "aws:sourceArn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":lambda:us-east-1:111111111111:function:*",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
              "Sid": "LambdaECRImageRetrievalPolicy-insecure-connections",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "DeploymentActionRole": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Allows only specific policy.",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": Array [
                    "cloudformation:CreateChangeSet",
                    "cloudformation:DeleteChangeSet",
                    "cloudformation:DescribeChangeSet",
                    "cloudformation:DescribeStacks",
                    "cloudformation:ExecuteChangeSet",
                    "cloudformation:CreateStack",
                    "cloudformation:UpdateStack",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "CloudFormationPermissions",
                },
                Object {
                  "Action": Array [
                    "s3:GetObject*",
                    "s3:GetBucket*",
                    "s3:List*",
                    "s3:Abort*",
                    "s3:DeleteObject*",
                    "s3:PutObject*",
                  ],
                  "Effect": "Allow",
                  "Resource": Array [
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::cdk-accel-assets-111111111111-us-east-1",
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::cdk-accel-assets-111111111111-us-east-1/*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "PipelineCrossAccountArtifactsBucket",
                },
                Object {
                  "Action": Array [
                    "kms:Decrypt",
                    "kms:DescribeKey",
                    "kms:Encrypt",
                    "kms:ReEncrypt*",
                    "kms:GenerateDataKey*",
                  ],
                  "Condition": Object {
                    "StringEquals": Object {
                      "kms:ViaService": "s3.us-east-1.amazonaws.com",
                    },
                  },
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "PipelineCrossAccountArtifactsKey",
                },
                Object {
                  "Action": "iam:PassRole",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::GetAtt": Array [
                      "CloudFormationExecutionRole",
                      "Arn",
                    ],
                  },
                  "Sid": "CliPermissions",
                },
                Object {
                  "Action": Array [
                    "cloudformation:DescribeStackEvents",
                    "cloudformation:GetTemplate",
                    "cloudformation:DeleteStack",
                    "cloudformation:UpdateTerminationProtection",
                    "sts:GetCallerIdentity",
                  ],
                  "Effect": "Allow",
                  "Resource": "*",
                  "Sid": "CfnPermissions",
                },
                Object {
                  "Action": Array [
                    "s3:GetObject*",
                    "s3:GetBucket*",
                    "s3:List*",
                  ],
                  "Effect": "Allow",
                  "Resource": Array [
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::cdk-accel-assets-111111111111-us-east-1",
                        ],
                      ],
                    },
                    Object {
                      "Fn::Join": Array [
                        "",
                        Array [
                          "arn:",
                          Object {
                            "Ref": "AWS::Partition",
                          },
                          ":s3:::cdk-accel-assets-111111111111-us-east-1/*",
                        ],
                      ],
                    },
                  ],
                  "Sid": "CliStagingBucket",
                },
                Object {
                  "Action": "ssm:GetParameter",
                  "Effect": "Allow",
                  "Resource": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":ssm:us-east-1:111111111111:parameter",
                        Object {
                          "Ref": "CdkBootstrapVersion",
                        },
                      ],
                    ],
                  },
                  "Sid": "ReadVersion",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "default",
          },
        ],
        "RoleName": "cdk-accel-deploy-role-111111111111-us-east-1",
      },
      "Type": "AWS::IAM::Role",
    },
    "FilePublishingRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "cdk-accel-file-publishing-role-111111111111-us-east-1",
      },
      "Type": "AWS::IAM::Role",
    },
    "FilePublishingRoleDefaultPolicy": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Allows only specific policy.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:GetEncryptionConfiguration",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-accel-assets-111111111111-us-east-1",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::cdk-accel-assets-111111111111-us-east-1/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "cdk-accel-file-publishing-role-default-policy-111111111111-us-east-1",
        "Roles": Array [
          Object {
            "Ref": "FilePublishingRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ImagePublishingRole": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": "cdk-accel-image-publishing-role-111111111111-us-east-1",
      },
      "Type": "AWS::IAM::Role",
    },
    "ImagePublishingRoleDefaultPolicy": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Allows only specific policy.",
            },
          ],
        },
      },
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ecr:PutImage",
                "ecr:InitiateLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:CompleteLayerUpload",
                "ecr:BatchCheckLayerAvailability",
                "ecr:DescribeRepositories",
                "ecr:DescribeImages",
                "ecr:BatchGetImage",
                "ecr:GetDownloadUrlForLayer",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:us-east-1:111111111111:repository/cdk-accel-container-assets-111111111111-us-east-1",
                  ],
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "cdk-accel-image-publishing-role-default-policy-111111111111-us-east-1",
        "Roles": Array [
          Object {
            "Ref": "ImagePublishingRole",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LookupRole": Object {
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-IAM4",
              "reason": "AWS Custom resource provider framework-role created by cdk.",
            },
            Object {
              "id": "AwsSolutions-IAM5",
              "reason": "Allows only specific policy.",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::111111111111:root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/ReadOnlyAccess",
              ],
            ],
          },
        ],
        "Policies": Array [
          Object {
            "PolicyDocument": Object {
              "Statement": Array [
                Object {
                  "Action": "kms:Decrypt",
                  "Effect": "Deny",
                  "Resource": "*",
                  "Sid": "DontReadSecrets",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "LookupRolePolicy",
          },
        ],
        "RoleName": "cdk-accel-lookup-role-111111111111-us-east-1",
      },
      "Type": "AWS::IAM::Role",
    },
    "SsmParamAcceleratorVersionFF83282D": Object {
      "Properties": Object {
        "Name": "/accelerator/AWSAccelerator-BootstrapStack-111111111111-us-east-1/version",
        "Type": "String",
        "Value": "1.3.0",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "SsmParamStackId521A78D3": Object {
      "Properties": Object {
        "Name": "/accelerator/AWSAccelerator-BootstrapStack-111111111111-us-east-1/stack-id",
        "Type": "String",
        "Value": Object {
          "Ref": "AWS::StackId",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "StagingBucket": Object {
      "DeletionPolicy": "Retain",
      "Metadata": Object {
        "cdk_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "AwsSolutions-S1",
              "reason": "StagingBucket has server access logs disabled until the task for access logging completed.",
            },
            Object {
              "id": "AwsSolutions-S10",
              "reason": "StagingBucket denies insecure requests via the bucket policy.",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "AssetEncryptionKey49BA7B12",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "BucketName": "cdk-accel-assets-111111111111-us-east-1",
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "StagingBucketPolicy83BEDEEE": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "StagingBucket",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Condition": Object {
                "StringEquals": Object {
                  "aws:PrincipalOrgID": "o-asdf123456",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "StagingBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "StagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudformation.amazonaws.com",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "StagingBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "StagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "StagingBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "StagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "StagingBucket",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "deny-insecure-connections",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
}
`;
